<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
    <db:template-query name="billingaccount_insert" doc:name="Template Query">
        <db:parameterized-query file="billingaccount_insert.sql"/>
                            <db:in-param name="id" type="VARCHAR" defaultValue="#[payload.id]"/>
                            <db:in-param name="name" type="VARCHAR" defaultValue="#[payload.name]"/>
                            <db:in-param name="city" type="VARCHAR" defaultValue="#[payload.city]"/>
                            <db:in-param name="street" type="VARCHAR" defaultValue="#[payload.street]"/>
                            <db:in-param name="postalCode" type="VARCHAR" defaultValue="#[payload.postalCode]"/>
                            <db:in-param name="phone" type="VARCHAR" defaultValue="#[payload.phone]"/>
                            <db:in-param name="state" type="VARCHAR" defaultValue="#[payload.state]"/>
                            <db:in-param name="lastSyncedTime" type="TIMESTAMP" defaultValue="#[payload.lastSyncedTime]"/>
						    <db:in-param name="country" type="VARCHAR" defaultValue="#[payload.country]"/>
    </db:template-query>
    <db:template-query name="billingaccount_update" doc:name="Template Query">
        <db:parameterized-query file="billingaccount_update.sql"/>
        <db:in-param name="lastModifiedTime" type="TIMESTAMP" defaultValue="#[new Date()]"/>
        <db:in-param name="id" type="VARCHAR" defaultValue="#[payload.id]"/>
        <db:in-param name="name" type="VARCHAR" defaultValue="#[payload.name]"/>
        <db:in-param name="city" type="VARCHAR" defaultValue="#[payload.city]"/>
        <db:in-param name="street" type="VARCHAR" defaultValue="#[payload.street]"/>
        <db:in-param name="postalCode" type="VARCHAR" defaultValue="#[payload.postalCode]"/>
        <db:in-param name="phone" type="VARCHAR" defaultValue="#[payload.phone]"/>
        <db:in-param name="state" type="VARCHAR" defaultValue="#[payload.state]"/>
        <db:in-param name="lastSyncedTime" type="TIMESTAMP" defaultValue="#[payload.lastSyncedTime]"/>
        <db:in-param name="country" type="VARCHAR" defaultValue="#[payload.country]"/>
        
    </db:template-query>
    <sub-flow name="checkExistSubflow">
        <batch:set-record-variable variableName="data" value="#[payload]" doc:name="save Payload"/>
        <db:select config-ref="MySQL_Configuration" maxRows="10" fetchSize="10" doc:name="checkExist">
            <db:parameterized-query><![CDATA[select id from billingaccount where id = #[payload.id]]]></db:parameterized-query>
        </db:select>
        <batch:set-record-variable variableName="exist" value="#[payload.size()&gt;0]" doc:name="saveCheckResult"/>
        <set-payload value="#[recordVars.data]" doc:name="restorePayload"/>
        <batch:remove-record-variable variableName="data" doc:name="removeTmp"/>
    </sub-flow>
    <batch:job name="syncSalesforce">
        <batch:input>
            <poll doc:name="Poll">
                <fixed-frequency-scheduler frequency="10" timeUnit="SECONDS"/>
                <watermark variable="lastModifiedDate" default-expression="#[new Date(0)]" selector="MAX" selector-expression="#[payload.LastModifiedDate]"/>
                <sfdc:query config-ref="Salesforce__Basic_Authentication" query="dsql:SELECT Id,Name,Phone,BillingCity,BillingCountry,BillingPostalCode,BillingState,BillingStreet,LastModifiedDate FROM Account WHERE LastModifiedDate &gt; #[flowVars.lastModifiedDate]" doc:name="Salesforce Query"/>
            </poll>
            <logger message="#[payload]" level="INFO" doc:name="Logger"/>
        </batch:input>
        <batch:process-records>
            <batch:step name="Batch_Step" accept-expression="#[payload.size()&gt;0]">
                <expression-component doc:name="initStats"><![CDATA[if (recordVars.stats == null) {
	recordVars.stats = {"noUpdated":0, "noCreated":0};
}]]></expression-component>
                <dw:transform-message doc:name="Transform Message" metadata:id="62dbac29-6954-44c6-a050-b845af80685d">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	id: payload.Id,
	name: payload.Name,
	city: payload.BillingCity,
	street: payload.BillingStreet,
	state: payload.BillingState,
	phone: payload.Phone,
	postalCode: payload.BillingPostalCode,
	country: payload.BillingCountry,
	lastSyncedTime: payload.LastModifiedDate
} as :object {
	class : "com.sfaccountsync.BillingAccount"
}]]></dw:set-payload>
                </dw:transform-message>
                <flow-ref name="checkExistSubflow" doc:name="checkExistSubflow"/>
                <choice doc:name="Choice">
                    <when expression="#[recordVars.exist == false]">
                        <db:insert config-ref="MySQL_Configuration" doc:name="insert">
                            <db:template-query-ref name="billingaccount_insert"/>
                        </db:insert>
                        <expression-component doc:name="collect stats"><![CDATA[recordVars.stats.noCreated=recordVars.stats.noCreated+1;]]></expression-component>
                    </when>
                    <otherwise>
                        <db:update config-ref="MySQL_Configuration" doc:name="update">
                            <db:template-query-ref name="billingaccount_update"/>
                        </db:update>
                        <expression-component doc:name="collect stats"><![CDATA[recordVars.stats.noUpdated = recordVars.stats.noUpdated+1;]]></expression-component>
                    </otherwise>
                </choice>
            </batch:step>
        </batch:process-records>
        <batch:on-complete>
            <logger  level="INFO" doc:name="Logger"/>
        </batch:on-complete>
    </batch:job>

</mule>
